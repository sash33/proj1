#include<stdio.h>
#include<unistd.h>
/*talk about code author etc
 * 
 * 
 * 
 */
char rotationEnc(char letter, int key);
char substitutionEnc(char letter);
char rotationDec(char letter, int key);
int setKey();
char makeUpper(char letter);

int main(){
int choice=0;
int key=0;
printf("WELCOME TO SOME INTERESTING CIPHERS - I HOPE YOU ENJOY!");
//User input for message into array
char message[] = "TESTING: !#?";
char emessage[] = "UFTUJOH: !#?";//encrypted message to be decrypted, maybe decrypt the encripted messsage
int size = sizeof(message)-1;     

//Sanitise to make UPPER case
for(int i=0; i<size;i++){                    
    makeUpper(message[i]);
}
//sanitising emessage
for(int i=0; i<size;i++){                    
    makeUpper(emessage[i]);
}


   

while(choice!=5){
    //printf("\nPlease enter a number to select an option");
    printf("\n 1- rotation encription.    2- substitution encription.   5- quit");
    

    scanf("%d ", &choice);
    printf("\nYour choice is : %d\n", choice);


    switch(choice){
        case 1: //calling rotationEnc     THE ENCRYPTED MESSAGE SHOULD BE STORED IN emessage INSTEAD OF BEING PRINTED
            key = setKey();
            
            for(int i=0; i<size;i++) {
                    
                if (message[i] <= 'Z' && message[i] >= 'A') {
                    printf("%c", rotationEnc(message[i], key));
                }else{
                    printf("%c", message [i]);
                }  
            }
            break;

        case 2: //calling substitutionEnc
            for(int i=0; i<=size; i++){//size of what?
                printf("%c ", substitutionEnc(message[i]));
            }
            break;
            
        case 3: //calling rotationDec
            key = setKey();
            for(int i=0; i<size; i++){
                if (emessage[i] <= 'Z' && emessage[i] >= 'A') {
                    printf("%c", rotationEnc(emessage[i], key));
                }else{
                    printf("%c", emessage [i]);
                }  
            }
            break;
            
        case 4: //calling substitutionDec
            
            
            break;
            
        case 5:
        return 0;
    }
}

return 0;
} 
/************Make the message upper case**************************/

char makeUpper(char letter){
    if (letter>=97 && letter<=122) {
        letter -= 32; 
    }
    return letter;
}
    
/********SET KEY**************************************************/
int setKey(){
    int key;
    printf("\nEnter key: ");
    scanf("%d ", &key);
return key;
}



/*****FUNCTION for rotation encryption****************************/ 
char rotationEnc(char letter, int key) {
        
        if(letter == 32){
            letter = 32;      
        }else if(letter + key >= 'A' && letter + key <= 'Z'){
            letter += key;

        }else if(letter + key > 'Z'){
            letter += key - 26;

        }else{
            letter += key + 26;
        }

return letter;
}

/****Function for rotation decryption****************************/
char rotationDec(char letter, int key){
    //should work off emessage and take the old or new key?
    
    if(letter == 32){
            letter = 32;      
        }else if(letter + key >= 'A' && letter + key <= 'Z'){
            letter += key;

        }else if(letter + key > 'Z'){
            letter += key - 26;

        }else{
            letter += key + 26;
        }

return letter;
    
}

/*****Function for substitution encription***********************/
char substitutionEnc(char letter){
    
switch(letter){
    case 65: letter = 66; break;
    case 66: letter = 67; break;
    case 67: letter = 68; break;
    case 68: letter = 69; break;
    case 69: letter = 70; break;
    case 70: letter = 71; break;
    case 71: letter = 72; break;
    case 72: letter = 73; break;
    case 73: letter = 74; break;
    case 74: letter = 75; break;
    case 75: letter = 76; break;
    case 76: letter = 77; break;
    case 77: letter = 89; break;
    case 78: letter = 69; break;
    case 79: letter = 69; break;
    case 80: letter = 70; break;
    case 81: letter = 70; break;
    case 82: letter = 70; break;
    case 83: letter = 67; break;
    case 84: letter = 89; break;
    case 85: letter = 87; break;
    case 86: letter = 80; break;
    case 87: letter = 89; break;
    case 88: letter = 90; break;
    case 89: letter = 89; break;
    case 90: letter = 69; break;
} 

return letter;
}
